"use client"// Deprecated component. Original component is `service-type-step.tsx`.// This stub prevents build errors if imported.export default function DeprecatedServiceTypeStep() {  return null;}// This file has been deprecated. Please use `service-type-step.tsx`.// Retained only to avoid import/builder issues.import React from "react";export default function DeprecatedServiceTypeStep() {  return null;}import { useQuoteWizard } from "@/contexts/quote-wizard-context"  const { formData, updateFormData, goToNextStep } = useQuoteWizard()  const [isSubmitting, setIsSubmitting] = useState(false)  const handleServiceTypeSelect = (type: "movers_truck" | "labor_only") => {    updateFormData({       serviceType: type,      vehicleType: type === "movers_truck" ? "" : undefined,      helperCount: 0    })  }  const handleSubmit = (e: React.FormEvent) => {    e.preventDefault()    if (!formData.serviceType) return    setIsSubmitting(true)    goToNextStep()  }  return (    <div className="max-w-md mx-auto px-4 py-8">      <div className="text-center mb-8">        <h2 className="text-2xl font-medium text-gray-900 mb-2">          What type of service do you need?        </h2>        <p className="text-gray-600">Select the option that best fits your needs</p>      </div>            <form onSubmit={handleSubmit} className="space-y-6">        <div className="space-y-4">          <button            type="button"            onClick={() => handleServiceTypeSelect("movers_truck")}            className={`w-full p-4 text-left rounded-lg border-2 transition-colors ${              formData.serviceType === "movers_truck"                ? "border-primary-500 bg-primary-50"                : "border-gray-200 hover:border-primary-300"            }`}          >            <div className="flex items-center">              <div className={`w-8 h-8 rounded-full flex items-center justify-center mr-3 ${                formData.serviceType === "movers_truck"                   ? "bg-primary-100 text-primary-600"                   : "bg-gray-100 text-gray-500"              }`}>                <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z" />                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l3.414 3.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0m-4 0a2 2 0 114 0m6 0a2 2 0 104 0m-4 0h6m2 0h1m2 0h1" />                </svg>              </div>              <span className="font-medium">Moving Service</span>              {formData.serviceType === "movers_truck" && (                <svg className="w-5 h-5 ml-auto text-primary-600" fill="currentColor" viewBox="0 0 20 20">                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />                </svg>              )}            </div>            <p className="text-sm text-gray-500 mt-1 ml-11">Professional movers with a truck</p>          </button>          <button            type="button"            onClick={() => handleServiceTypeSelect("labor_only")}            className={`w-full p-4 text-left rounded-lg border-2 transition-colors ${              formData.serviceType === "labor_only"                ? "border-primary-500 bg-primary-50"                : "border-gray-200 hover:border-primary-300"            }`}          >            <div className="flex items-center">              <div className={`w-8 h-8 rounded-full flex items-center justify-center mr-3 ${                formData.serviceType === "labor_only"                   ? "bg-primary-100 text-primary-600"                   : "bg-gray-100 text-gray-500"              }`}>                <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />                </svg>              </div>              <span className="font-medium">Labor Only</span>              {formData.serviceType === "labor_only" && (                <svg className="w-5 h-5 ml-auto text-primary-600" fill="currentColor" viewBox="0 0 20 20">                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />                </svg>              )}            </div>            <p className="text-sm text-gray-500 mt-1 ml-11">Just need help with loading/unloading</p>          </button>        </div>        <div className="pt-4">          <button            type="submit"            disabled={!formData.serviceType || isSubmitting}            className="w-full bg-primary-600 hover:bg-primary-700 text-white font-medium py-3 px-4 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed"          >            {isSubmitting ? 'Continuing...' : 'Continue'}          </button>        </div>      </form>    </div>  )                {formData.serviceType === "labor_only" && (                  <svg className="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">                    <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />                  </svg>                )}              </div>            </div>            {/* Service icon */}            <div className={`w-16 h-16 rounded-2xl flex items-center justify-center mb-6 transition-all duration-300 ${              formData.serviceType === "labor_only"                 ? "bg-primary-600 shadow-lg"                 : "bg-gradient-to-br from-purple-100 to-purple-200 group-hover:from-primary-100 group-hover:to-primary-200"            }`}>              <svg className={`w-8 h-8 ${formData.serviceType === "labor_only" ? "text-white" : "text-purple-600 group-hover:text-primary-600"}`} fill="currentColor" viewBox="0 0 20 20">                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />              </svg>            </div>            <div>              <h5 className="font-bold text-xl text-gray-900 mb-3">Labor Only</h5>              <p className="text-gray-600 leading-relaxed mb-4">                Professional movers only - you provide transportation. Great for budget-conscious moves.              </p>              <div className="flex items-center space-x-2 text-sm text-gray-500">                <svg className="w-4 h-4 text-blue-500" fill="currentColor" viewBox="0 0 20 20">                  <path fillRule="evenodd" d="M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z" clipRule="evenodd" />                </svg>                <span>Cost Effective</span>              </div>            </div>          </div>        </div>      </div>      {/* Vehicle Type Selection - Show only if Movers + Truck is selected */}      {showVehicleType && formData.serviceType === "movers_truck" && (        <div className="space-y-4 animate-in slide-in-from-bottom-4 duration-500" data-question="vehicle-type">          <h4 className="text-lg font-semibold text-gray-900">Select Vehicle Type</h4>          <div className="grid grid-cols-1 gap-4">            {/* Pickup Truck Option */}            <div              className={`p-4 md:p-6 border-2 rounded-xl cursor-pointer transition-all duration-200 ${                formData.vehicleType === "pickup_truck"                  ? "border-primary-600 bg-primary-50 shadow-md"                  : "border-gray-300 hover:border-primary-300 hover:bg-gray-50"              }`}              onClick={() => handleVehicleTypeSelect("pickup_truck")}            >              <div className="flex items-start">                <div                  className={`w-5 h-5 rounded-full border-2 flex items-center justify-center mr-4 mt-1 ${                    formData.vehicleType === "pickup_truck" ? "border-primary-600 bg-primary-600" : "border-gray-400"                  }`}                >                  {formData.vehicleType === "pickup_truck" && <div className="w-2 h-2 rounded-full bg-white"></div>}                </div>                <div className="flex-1">                  <h5 className="font-semibold text-gray-900">Pickup Truck</h5>                  <p className="text-sm text-gray-600 mt-1">                    Basic option, included at no extra cost                  </p>                </div>              </div>            </div>            {/* Cargo Van Option */}            <div              className={`p-4 md:p-6 border-2 rounded-xl cursor-pointer transition-all duration-200 ${                formData.vehicleType === "cargo_van"                  ? "border-primary-600 bg-primary-50 shadow-md"                  : "border-gray-300 hover:border-primary-300 hover:bg-gray-50"              }`}              onClick={() => handleVehicleTypeSelect("cargo_van")}            >              <div className="flex items-start">                <div                  className={`w-5 h-5 rounded-full border-2 flex items-center justify-center mr-4 mt-1 ${                    formData.vehicleType === "cargo_van" ? "border-primary-600 bg-primary-600" : "border-gray-400"                  }`}                >                  {formData.vehicleType === "cargo_van" && <div className="w-2 h-2 rounded-full bg-white"></div>}                </div>                <div className="flex-1">                  <h5 className="font-semibold text-gray-900">Cargo Van (10-12 ft)</h5>                  <p className="text-sm text-gray-600 mt-1">                    Best for studio/1BR, <span className="text-red-600 font-medium">+$69 fee</span>                  </p>                </div>              </div>            </div>            {/* Box Truck Option */}            <div              className={`p-4 md:p-6 border-2 rounded-xl cursor-pointer transition-all duration-200 ${                formData.vehicleType === "box_truck"                  ? "border-primary-600 bg-primary-50 shadow-md"                  : "border-gray-300 hover:border-primary-300 hover:bg-gray-50"              }`}              onClick={() => handleVehicleTypeSelect("box_truck")}            >              <div className="flex items-start">                <div                  className={`w-5 h-5 rounded-full border-2 flex items-center justify-center mr-4 mt-1 ${                    formData.vehicleType === "box_truck" ? "border-primary-600 bg-primary-600" : "border-gray-400"                  }`}                >                  {formData.vehicleType === "box_truck" && <div className="w-2 h-2 rounded-full bg-white"></div>}                </div>                <div className="flex-1">                  <h5 className="font-semibold text-gray-900">Box Truck (15-17 ft)</h5>                  <p className="text-sm text-gray-600 mt-1">                    Ideal for 2-3BR homes, <span className="text-red-600 font-medium">+$149 fee</span>                  </p>                </div>              </div>            </div>          </div>        </div>      )}      {/* Helper Count Selection - Show after service type (and vehicle type if applicable) */}      {showHelperCount && (        <div className="space-y-4 animate-in slide-in-from-bottom-4 duration-500" data-question="helper-count">          <h4 className="text-lg font-semibold text-gray-900">How many helpers do you need?</h4>          <div className="grid grid-cols-1 gap-4">            {/* 1 Helper Option */}            <div              className={`p-4 md:p-6 border-2 rounded-xl cursor-pointer transition-all duration-200 ${                formData.helperCount === 1                  ? "border-primary-600 bg-primary-50 shadow-md"                  : "border-gray-300 hover:border-primary-300 hover:bg-gray-50"              }`}              onClick={() => handleHelperCountSelect(1)}            >              <div className="flex items-start">                <div                  className={`w-5 h-5 rounded-full border-2 flex items-center justify-center mr-4 mt-1 ${                    formData.helperCount === 1 ? "border-primary-600 bg-primary-600" : "border-gray-400"                  }`}                >                  {formData.helperCount === 1 && <div className="w-2 h-2 rounded-full bg-white"></div>}                </div>                <div className="flex-1">                  <h5 className="font-semibold text-gray-900">1 Helper + You</h5>                  <p className="text-sm text-gray-600 mt-1">                    If your move needs 2 people to lift and carry, you can save money by helping!                  </p>                </div>              </div>            </div>            {/* 2 Helpers Option */}            <div              className={`p-4 md:p-6 border-2 rounded-xl cursor-pointer transition-all duration-200 ${                formData.helperCount === 2                  ? "border-primary-600 bg-primary-50 shadow-md"                  : "border-gray-300 hover:border-primary-300 hover:bg-gray-50"              }`}              onClick={() => handleHelperCountSelect(2)}            >              <div className="flex items-start">                <div                  className={`w-5 h-5 rounded-full border-2 flex items-center justify-center mr-4 mt-1 ${                    formData.helperCount === 2 ? "border-primary-600 bg-primary-600" : "border-gray-400"                  }`}                >                  {formData.helperCount === 2 && <div className="w-2 h-2 rounded-full bg-white"></div>}                </div>                <div className="flex-1">                  <h5 className="font-semibold text-gray-900">2 Helpers</h5>                  <p className="text-sm text-gray-600 mt-1">                    Two helpers with a vehicle will arrive to get your move done quick and easy.                  </p>                </div>              </div>            </div>          </div>        </div>      )}      {/* Navigation Buttons - Show only when all questions are answered */}      {showContinueButton && (        <div          className="flex flex-col md:flex-row justify-between gap-4 pt-6 animate-in slide-in-from-bottom-4 duration-500"          data-question="continue-button"        >          <Button            onClick={goToPreviousStep}            variant="outline"            className="w-full md:w-auto px-8 py-3 text-gray-700 border-gray-300 hover:bg-gray-50"          >            Back          </Button>          <Button            onClick={handleContinue}            className="w-full md:w-auto px-8 py-3 bg-gradient-to-r from-primary-700 to-primary-600 hover:from-primary-800 hover:to-primary-700 text-white"          >            Continue          </Button>        </div>      )}    </div>  )}export default ServiceTypeStep
